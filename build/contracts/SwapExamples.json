{
  "contractName": "SwapExamples",
  "abi": [
    {
      "inputs": [],
      "name": "poolFee",
      "outputs": [
        {
          "internalType": "uint24",
          "name": "",
          "type": "uint24"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "swapRouter",
      "outputs": [
        {
          "internalType": "contract ISwapRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token_in",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token_out",
          "type": "address"
        }
      ],
      "name": "swapExactInputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountInMaximum",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "token_in",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token_out",
          "type": "address"
        }
      ],
      "name": "swapExactOutputSingle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"poolFee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token_in\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_out\",\"type\":\"address\"}],\"name\":\"swapExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"token_in\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token_out\",\"type\":\"address\"}],\"name\":\"swapExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"swapExactInputSingle(uint256,address,address)\":{\"details\":\"The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\",\"params\":{\"amountIn\":\"The exact amount of DAI that will be swapped for WETH9.\"},\"returns\":{\"amountOut\":\"The amount of WETH9 received.\"}},\"swapExactOutputSingle(uint256,uint256,address,address)\":{\"details\":\"The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.\",\"params\":{\"amountInMaximum\":\"The amount of DAI we are willing to spend to receive the specified amount of WETH9.\",\"amountOut\":\"The exact amount of WETH9 to receive from the swap.\"},\"returns\":{\"amountIn\":\"The amount of DAI actually spent in the swap.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"swapExactInputSingle(uint256,address,address)\":{\"notice\":\"swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\"},\"swapExactOutputSingle(uint256,uint256,address,address)\":{\"notice\":\"swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/SwapExamples.sol\":\"SwapExamples\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xbd74f587ab9b9711801baf667db1426e4a03fd2d7f15af33e0e0d0394e7cef76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2d0913dfbfce90d170df0d496ad7596c0778518e5fa7aba6c32562522546f66b\",\"dweb:/ipfs/QmR6B8nLj2PJf5e1JWD9Nk7ErkAwkqUwadCnvE82FJr1RU\"]},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://095ce0626b41318c772b3ebf19d548282607f6a8f3d6c41c13edfbd5370c8652\",\"dweb:/ipfs/QmVDZfJJ89UUCE1hMyzqpkZAtQ8jUsBgZNE5AMRG7RzRFS\"]},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a8a2c3e55965b61bcd91993d8e1d5d34b8b8a63e0fdfce87a85f6af92526fd53\",\"dweb:/ipfs/QmQj2CSCSwqDSU4KMNWxGsN2336Cy64WgpV1X1EHXNZWxM\"]},\"@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol\":{\"keccak256\":\"0x9af98b0908c96320ca6d08b22f0efca864742f6adbe5794cafe2d1d2e808b0cd\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://da1d1e81e5bf534f0bf2934b3193db6cb1933f91ec006d2b88e9ad10a617a2d2\",\"dweb:/ipfs/QmcPBk47QLMFWcX2y2S9eMFsJgoYWBd3R8ey55Bgmv6w6v\"]},\"project:/contracts/SwapExamples.sol\":{\"keccak256\":\"0x82cedc9afadc4bc3d7893d8d30cac050ac3752d9b1bda75a3fc490083b76c43f\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://392688b7215cb6a01e71f12e43c0dec735f0c5067795aab7935fa74e0af69b14\",\"dweb:/ipfs/QmbiDJ7nZ9WVPJbGFC3FYxpWisz489JLoZqTUMHLvedrDH\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610e70806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063089fe6aa146100515780634ce4dca51461006f5780639d0b14c51461009f578063c31c9c07146100cf575b600080fd5b6100596100ed565b6040516100669190610d67565b60405180910390f35b61008960048036038101906100849190610ab5565b6100f3565b6040516100969190610d82565b60405180910390f35b6100b960048036038101906100b49190610b04565b610268565b6040516100c69190610d82565b60405180910390f35b6100d7610413565b6040516100e49190610d14565b60405180910390f35b610bb881565b60006101018333308761042b565b6101208373e592427a0aece92de3edee1f18e0157c058615648661064b565b60006040518061010001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200186815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b815260040161020c9190610d2f565b602060405180830381600087803b15801561022657600080fd5b505af115801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e9190610a8c565b9150509392505050565b60006102768333308761042b565b6102958373e592427a0aece92de3edee1f18e0157c058615648661064b565b60006040518061010001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001878152602001868152602001600073ffffffffffffffffffffffffffffffffffffffff16815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663db3e2198826040518263ffffffff1660e01b81526004016103809190610d4b565b602060405180830381600087803b15801561039a57600080fd5b505af11580156103ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d29190610a8c565b91508482101561040a576103fc8473e592427a0aece92de3edee1f18e0157c05861564600061064b565b610409843384880361084c565b5b50949350505050565b73e592427a0aece92de3edee1f18e0157c0586156481565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061052a5780518252602082019150602081019050602083039250610507565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461058c576040519150601f19603f3d011682016040523d82523d6000602084013e610591565b606091505b50915091508180156105d157506000815114806105d057508080602001905160208110156105be57600080fd5b81019080805190602001909291905050505b5b610643576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260038152602001807f535446000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061072c5780518252602082019150602081019050602083039250610709565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461078e576040519150601f19603f3d011682016040523d82523d6000602084013e610793565b606091505b50915091508180156107d357506000815114806107d257508080602001905160208110156107c057600080fd5b81019080805190602001909291905050505b5b610845576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f534100000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b5050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061092d578051825260208201915060208101905060208303925061090a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461098f576040519150601f19603f3d011682016040523d82523d6000602084013e610994565b606091505b50915091508180156109d457506000815114806109d357508080602001905160208110156109c157600080fd5b81019080805190602001909291905050505b5b610a46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f535400000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b5050505050565b600081359050610a5c81610e0c565b92915050565b600081359050610a7181610e23565b92915050565b600081519050610a8681610e23565b92915050565b600060208284031215610a9e57600080fd5b6000610aac84828501610a77565b91505092915050565b600080600060608486031215610aca57600080fd5b6000610ad886828701610a62565b9350506020610ae986828701610a4d565b9250506040610afa86828701610a4d565b9150509250925092565b60008060008060808587031215610b1a57600080fd5b6000610b2887828801610a62565b9450506020610b3987828801610a62565b9350506040610b4a87828801610a4d565b9250506060610b5b87828801610a4d565b91505092959194509250565b610b7081610d9d565b82525050565b610b7f81610de8565b82525050565b61010082016000820151610b9c6000850182610b67565b506020820151610baf6020850182610b67565b506040820151610bc26040850182610cd8565b506060820151610bd56060850182610b67565b506080820151610be86080850182610cf6565b5060a0820151610bfb60a0850182610cf6565b5060c0820151610c0e60c0850182610cf6565b5060e0820151610c2160e0850182610cc9565b50505050565b61010082016000820151610c3e6000850182610b67565b506020820151610c516020850182610b67565b506040820151610c646040850182610cd8565b506060820151610c776060850182610b67565b506080820151610c8a6080850182610cf6565b5060a0820151610c9d60a0850182610cf6565b5060c0820151610cb060c0850182610cf6565b5060e0820151610cc360e0850182610cc9565b50505050565b610cd281610daf565b82525050565b610ce181610dcf565b82525050565b610cf081610dcf565b82525050565b610cff81610dde565b82525050565b610d0e81610dde565b82525050565b6000602082019050610d296000830184610b76565b92915050565b600061010082019050610d456000830184610b85565b92915050565b600061010082019050610d616000830184610c27565b92915050565b6000602082019050610d7c6000830184610ce7565b92915050565b6000602082019050610d976000830184610d05565b92915050565b6000610da882610daf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b6000610df382610dfa565b9050919050565b6000610e0582610daf565b9050919050565b610e1581610d9d565b8114610e2057600080fd5b50565b610e2c81610dde565b8114610e3757600080fd5b5056fea26469706673582212201164ce5c60a9367bcecfa2df43a766013f8adc5ea8d0e550d6320825f7b39b0264736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c8063089fe6aa146100515780634ce4dca51461006f5780639d0b14c51461009f578063c31c9c07146100cf575b600080fd5b6100596100ed565b6040516100669190610d67565b60405180910390f35b61008960048036038101906100849190610ab5565b6100f3565b6040516100969190610d82565b60405180910390f35b6100b960048036038101906100b49190610b04565b610268565b6040516100c69190610d82565b60405180910390f35b6100d7610413565b6040516100e49190610d14565b60405180910390f35b610bb881565b60006101018333308761042b565b6101208373e592427a0aece92de3edee1f18e0157c058615648661064b565b60006040518061010001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200186815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663414bf389826040518263ffffffff1660e01b815260040161020c9190610d2f565b602060405180830381600087803b15801561022657600080fd5b505af115801561023a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025e9190610a8c565b9150509392505050565b60006102768333308761042b565b6102958373e592427a0aece92de3edee1f18e0157c058615648661064b565b60006040518061010001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001878152602001868152602001600073ffffffffffffffffffffffffffffffffffffffff16815250905073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663db3e2198826040518263ffffffff1660e01b81526004016103809190610d4b565b602060405180830381600087803b15801561039a57600080fd5b505af11580156103ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d29190610a8c565b91508482101561040a576103fc8473e592427a0aece92de3edee1f18e0157c05861564600061064b565b610409843384880361084c565b5b50949350505050565b73e592427a0aece92de3edee1f18e0157c0586156481565b6000808573ffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b868686604051602401808473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061052a5780518252602082019150602081019050602083039250610507565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461058c576040519150601f19603f3d011682016040523d82523d6000602084013e610591565b606091505b50915091508180156105d157506000815114806105d057508080602001905160208110156105be57600080fd5b81019080805190602001909291905050505b5b610643576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260038152602001807f535446000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b8585604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061072c5780518252602082019150602081019050602083039250610709565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461078e576040519150601f19603f3d011682016040523d82523d6000602084013e610793565b606091505b50915091508180156107d357506000815114806107d257508080602001905160208110156107c057600080fd5b81019080805190602001909291905050505b5b610845576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f534100000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b5050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b8585604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040518082805190602001908083835b6020831061092d578051825260208201915060208101905060208303925061090a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461098f576040519150601f19603f3d011682016040523d82523d6000602084013e610994565b606091505b50915091508180156109d457506000815114806109d357508080602001905160208110156109c157600080fd5b81019080805190602001909291905050505b5b610a46576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260028152602001807f535400000000000000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b5050505050565b600081359050610a5c81610e0c565b92915050565b600081359050610a7181610e23565b92915050565b600081519050610a8681610e23565b92915050565b600060208284031215610a9e57600080fd5b6000610aac84828501610a77565b91505092915050565b600080600060608486031215610aca57600080fd5b6000610ad886828701610a62565b9350506020610ae986828701610a4d565b9250506040610afa86828701610a4d565b9150509250925092565b60008060008060808587031215610b1a57600080fd5b6000610b2887828801610a62565b9450506020610b3987828801610a62565b9350506040610b4a87828801610a4d565b9250506060610b5b87828801610a4d565b91505092959194509250565b610b7081610d9d565b82525050565b610b7f81610de8565b82525050565b61010082016000820151610b9c6000850182610b67565b506020820151610baf6020850182610b67565b506040820151610bc26040850182610cd8565b506060820151610bd56060850182610b67565b506080820151610be86080850182610cf6565b5060a0820151610bfb60a0850182610cf6565b5060c0820151610c0e60c0850182610cf6565b5060e0820151610c2160e0850182610cc9565b50505050565b61010082016000820151610c3e6000850182610b67565b506020820151610c516020850182610b67565b506040820151610c646040850182610cd8565b506060820151610c776060850182610b67565b506080820151610c8a6080850182610cf6565b5060a0820151610c9d60a0850182610cf6565b5060c0820151610cb060c0850182610cf6565b5060e0820151610cc360e0850182610cc9565b50505050565b610cd281610daf565b82525050565b610ce181610dcf565b82525050565b610cf081610dcf565b82525050565b610cff81610dde565b82525050565b610d0e81610dde565b82525050565b6000602082019050610d296000830184610b76565b92915050565b600061010082019050610d456000830184610b85565b92915050565b600061010082019050610d616000830184610c27565b92915050565b6000602082019050610d7c6000830184610ce7565b92915050565b6000602082019050610d976000830184610d05565b92915050565b6000610da882610daf565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062ffffff82169050919050565b6000819050919050565b6000610df382610dfa565b9050919050565b6000610e0582610daf565b9050919050565b610e1581610d9d565b8114610e2057600080fd5b50565b610e2c81610dde565b8114610e3757600080fd5b5056fea26469706673582212201164ce5c60a9367bcecfa2df43a766013f8adc5ea8d0e550d6320825f7b39b0264736f6c63430007060033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8788:5",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:5"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:5",
                "type": ""
              }
            ],
            "src": "7:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "204:87:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "214:29:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "236:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "223:12:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "223:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "214:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "279:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "252:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "252:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "252:33:5"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "182:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "190:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "198:5:5",
                "type": ""
              }
            ],
            "src": "152:139:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "360:80:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "370:22:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "385:6:5"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "379:5:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "379:13:5"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "370:5:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "428:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "401:26:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "401:33:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "401:33:5"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "338:6:5",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "346:3:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "354:5:5",
                "type": ""
              }
            ],
            "src": "297:143:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "523:207:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "569:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "578:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "581:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "571:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "571:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "571:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "544:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "553:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "540:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "540:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "565:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "536:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "536:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "533:2:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "595:128:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "610:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "624:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "614:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "639:74:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "685:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "696:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "681:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "681:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "705:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "649:31:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "649:64:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "639:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "493:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "504:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "516:6:5",
                "type": ""
              }
            ],
            "src": "446:284:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "836:452:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "882:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "891:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "894:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "884:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "884:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "884:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "857:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "866:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "853:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "853:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "878:2:5",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "849:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "849:32:5"
                  },
                  "nodeType": "YulIf",
                  "src": "846:2:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "908:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "923:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "937:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "927:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "952:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "987:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "998:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "983:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "983:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1007:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "962:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "962:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "952:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1035:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1050:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1064:2:5",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1054:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1080:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1115:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1126:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1111:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1111:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1135:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1090:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1090:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1080:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1163:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1178:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1192:2:5",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1182:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1208:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1243:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1254:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1239:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1239:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1263:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1218:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1218:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1208:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "790:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "801:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "813:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "821:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "829:6:5",
                "type": ""
              }
            ],
            "src": "736:552:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1411:581:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1458:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1467:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1470:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1460:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1460:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1460:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1432:7:5"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1441:9:5"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1428:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1428:23:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1453:3:5",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1424:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1424:33:5"
                  },
                  "nodeType": "YulIf",
                  "src": "1421:2:5"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1484:117:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1499:15:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1513:1:5",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1503:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1528:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1563:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1574:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1559:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1559:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1583:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1538:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1538:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1528:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1611:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1626:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1640:2:5",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1630:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1656:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1691:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1702:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1687:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1687:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1711:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1666:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1666:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1656:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1739:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1754:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1768:2:5",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1758:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1784:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1819:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1830:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1815:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1815:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1839:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1794:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1794:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1784:6:5"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1867:118:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1882:16:5",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1896:2:5",
                        "type": "",
                        "value": "96"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1886:6:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1912:63:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1947:9:5"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1958:6:5"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1943:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1943:22:5"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1967:7:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1922:20:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1922:53:5"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "1912:6:5"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1357:9:5",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1368:7:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1380:6:5",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1388:6:5",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1396:6:5",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1404:6:5",
                "type": ""
              }
            ],
            "src": "1294:698:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2053:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2070:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2093:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2075:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2075:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2063:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2063:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2063:37:5"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2041:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2048:3:5",
                "type": ""
              }
            ],
            "src": "1998:108:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2196:85:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2213:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2268:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ISwapRouter_$187_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2218:49:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2218:56:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2206:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2206:69:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2206:69:5"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ISwapRouter_$187_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2184:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2191:3:5",
                "type": ""
              }
            ],
            "src": "2112:169:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2525:1479:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2535:28:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2551:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2556:6:5",
                        "type": "",
                        "value": "0x0100"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2547:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2547:16:5"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2539:4:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2573:167:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2611:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2641:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2648:4:5",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2637:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2637:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2631:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2631:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2615:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2701:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2719:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2724:4:5",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2715:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2715:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2667:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2667:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2667:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2750:168:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2789:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2819:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2826:4:5",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2815:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2815:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2809:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2809:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2793:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2879:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2897:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2902:4:5",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2893:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2893:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2845:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2845:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2845:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2928:161:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2962:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2992:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2999:4:5",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2988:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2988:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2982:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2982:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2966:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3050:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3068:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3073:4:5",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3064:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3064:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint24_to_t_uint24",
                          "nodeType": "YulIdentifier",
                          "src": "3018:31:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3018:61:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3018:61:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3099:169:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3139:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3169:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3176:4:5",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3165:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3165:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3159:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3159:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3143:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3229:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3247:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3252:4:5",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3243:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3243:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3195:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3195:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3195:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3278:168:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3317:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3347:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3354:4:5",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3343:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3343:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3337:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3337:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3321:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3407:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3425:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3430:4:5",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3421:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3421:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3373:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3373:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3373:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3456:168:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3495:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3525:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3532:4:5",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3521:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3521:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3515:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3515:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3499:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3585:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3603:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3608:4:5",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3599:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3599:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3551:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3551:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3551:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3634:176:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3681:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3711:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3718:4:5",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3707:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3707:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3701:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3701:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3685:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3771:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3789:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3794:4:5",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3785:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3785:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3737:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3737:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3737:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3820:177:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3868:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3898:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3905:4:5",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3894:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3894:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3888:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3888:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "3872:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3958:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3976:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3981:4:5",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3972:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3972:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint160_to_t_uint160",
                          "nodeType": "YulIdentifier",
                          "src": "3924:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3924:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3924:63:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2512:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2519:3:5",
                "type": ""
              }
            ],
            "src": "2381:1623:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4252:1479:5",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4262:28:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4278:3:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4283:6:5",
                        "type": "",
                        "value": "0x0100"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4274:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4274:16:5"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "4266:4:5",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4300:167:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4338:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4368:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4375:4:5",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4364:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4364:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4358:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4358:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4342:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4428:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4446:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4451:4:5",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4442:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4442:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4394:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4394:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4394:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4477:168:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4516:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4546:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4553:4:5",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4542:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4542:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4536:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4536:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4520:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4606:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4624:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4629:4:5",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4620:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4620:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4572:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4572:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4572:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4655:161:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4689:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4719:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4726:4:5",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4715:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4715:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4709:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4709:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4693:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4777:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4795:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4800:4:5",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4791:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4791:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint24_to_t_uint24",
                          "nodeType": "YulIdentifier",
                          "src": "4745:31:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4745:61:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4745:61:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4826:169:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4866:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4896:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4903:4:5",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4892:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4892:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4886:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4886:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4870:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4956:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4974:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4979:4:5",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4970:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4970:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4922:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4922:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4922:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5005:168:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5044:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5074:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5081:4:5",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5070:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5070:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5064:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5064:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5048:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5134:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5152:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5157:4:5",
                                "type": "",
                                "value": "0x80"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5148:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5148:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5100:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5100:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5100:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5183:169:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5223:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5253:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5260:4:5",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5249:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5249:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5243:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5243:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5227:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5313:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5331:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5336:4:5",
                                "type": "",
                                "value": "0xa0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5327:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5327:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5279:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5279:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5279:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5362:175:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5408:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5438:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5445:4:5",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5434:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5434:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5428:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5428:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5412:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5498:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5516:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5521:4:5",
                                "type": "",
                                "value": "0xc0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5512:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5512:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5464:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5464:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5464:63:5"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5547:177:5",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5595:43:5",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "5625:5:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5632:4:5",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5621:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5621:16:5"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "5615:5:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5615:23:5"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "5599:12:5",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "5685:12:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "5703:3:5"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5708:4:5",
                                "type": "",
                                "value": "0xe0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5699:3:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5699:14:5"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint160_to_t_uint160",
                          "nodeType": "YulIdentifier",
                          "src": "5651:33:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5651:63:5"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5651:63:5"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_ExactOutputSingleParams_$159_memory_ptr_to_t_struct$_ExactOutputSingleParams_$159_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4239:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4246:3:5",
                "type": ""
              }
            ],
            "src": "4106:1625:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5792:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5809:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5832:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint160",
                          "nodeType": "YulIdentifier",
                          "src": "5814:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5814:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5802:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5802:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5802:37:5"
                }
              ]
            },
            "name": "abi_encode_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5780:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5787:3:5",
                "type": ""
              }
            ],
            "src": "5737:108:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5904:52:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5921:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5943:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint24",
                          "nodeType": "YulIdentifier",
                          "src": "5926:16:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5926:23:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5914:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5914:36:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5914:36:5"
                }
              ]
            },
            "name": "abi_encode_t_uint24_to_t_uint24",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5892:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5899:3:5",
                "type": ""
              }
            ],
            "src": "5851:105:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6025:52:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6042:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6064:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint24",
                          "nodeType": "YulIdentifier",
                          "src": "6047:16:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6047:23:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6035:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6035:36:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6035:36:5"
                }
              ]
            },
            "name": "abi_encode_t_uint24_to_t_uint24_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6013:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6020:3:5",
                "type": ""
              }
            ],
            "src": "5962:115:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6138:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6155:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6178:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6160:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6160:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6148:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6148:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6148:37:5"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6126:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6133:3:5",
                "type": ""
              }
            ],
            "src": "6083:108:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6262:53:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6279:3:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6302:5:5"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6284:17:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6284:24:5"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6272:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6272:37:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6272:37:5"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6250:5:5",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6257:3:5",
                "type": ""
              }
            ],
            "src": "6197:118:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6438:143:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6448:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6460:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6471:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6456:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6456:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6448:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6547:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6560:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6571:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6556:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6556:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ISwapRouter_$187_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6484:62:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6484:90:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6484:90:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ISwapRouter_$187__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6410:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6422:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6433:4:5",
                "type": ""
              }
            ],
            "src": "6321:260:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6763:203:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6773:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6785:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6796:3:5",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6781:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6781:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6773:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6932:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6945:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6956:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6941:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6941:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6810:121:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6810:149:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6810:149:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6735:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6747:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6758:4:5",
                "type": ""
              }
            ],
            "src": "6587:379:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7150:205:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7160:27:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7172:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7183:3:5",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7168:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7168:19:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7160:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7321:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7334:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7345:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7330:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7330:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_ExactOutputSingleParams_$159_memory_ptr_to_t_struct$_ExactOutputSingleParams_$159_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7197:123:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7197:151:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7197:151:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_ExactOutputSingleParams_$159_memory_ptr__to_t_struct$_ExactOutputSingleParams_$159_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7122:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7134:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7145:4:5",
                "type": ""
              }
            ],
            "src": "6972:383:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7457:122:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7467:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7479:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7490:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7475:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7475:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7467:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7545:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7558:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7569:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7554:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7554:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint24_to_t_uint24_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7503:41:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7503:69:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7503:69:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7429:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7441:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7452:4:5",
                "type": ""
              }
            ],
            "src": "7361:218:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7683:124:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7693:26:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7705:9:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7716:2:5",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7701:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7701:18:5"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7693:4:5"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7773:6:5"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7786:9:5"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7797:1:5",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7782:3:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7782:17:5"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7729:43:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7729:71:5"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7729:71:5"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7655:9:5",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7667:6:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7678:4:5",
                "type": ""
              }
            ],
            "src": "7585:222:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7858:51:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7868:35:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7897:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "7879:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7879:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7868:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7840:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7850:7:5",
                "type": ""
              }
            ],
            "src": "7813:96:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7960:81:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7970:65:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7985:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7992:42:5",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7981:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7981:54:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "7970:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "7942:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "7952:7:5",
                "type": ""
              }
            ],
            "src": "7915:126:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8091:47:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8101:31:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8116:5:5"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8123:8:5",
                        "type": "",
                        "value": "0xffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8112:3:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8112:20:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8101:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint24",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8073:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8083:7:5",
                "type": ""
              }
            ],
            "src": "8047:91:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8189:32:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8199:16:5",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8210:5:5"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8199:7:5"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8171:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8181:7:5",
                "type": ""
              }
            ],
            "src": "8144:77:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8306:85:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8316:69:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8379:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_contract$_ISwapRouter_$187_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8329:49:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8329:56:5"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8316:9:5"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ISwapRouter_$187_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8286:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8296:9:5",
                "type": ""
              }
            ],
            "src": "8227:164:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8476:53:5",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8486:37:5",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8517:5:5"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "8499:17:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8499:24:5"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "8486:9:5"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ISwapRouter_$187_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8456:5:5",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "8466:9:5",
                "type": ""
              }
            ],
            "src": "8397:132:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8578:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8635:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8644:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8647:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8637:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8637:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8637:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8601:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8626:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "8608:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8608:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8598:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8598:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8591:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8591:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "8588:2:5"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8571:5:5",
                "type": ""
              }
            ],
            "src": "8535:122:5"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8706:79:5",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8763:16:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8772:1:5",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8775:1:5",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8765:6:5"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8765:12:5"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8765:12:5"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8729:5:5"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8754:5:5"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "8736:17:5"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8736:24:5"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8726:2:5"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8726:35:5"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8719:6:5"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8719:43:5"
                  },
                  "nodeType": "YulIf",
                  "src": "8716:2:5"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8699:5:5",
                "type": ""
              }
            ],
            "src": "8663:122:5"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_ISwapRouter_$187_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ISwapRouter_$187_to_t_address(value))\n    }\n\n    // struct ISwapRouter.ExactInputSingleParams -> struct ISwapRouter.ExactInputSingleParams\n    function abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountIn\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountOutMinimum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    // struct ISwapRouter.ExactOutputSingleParams -> struct ISwapRouter.ExactOutputSingleParams\n    function abi_encode_t_struct$_ExactOutputSingleParams_$159_memory_ptr_to_t_struct$_ExactOutputSingleParams_$159_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // tokenIn\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenOut\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // fee\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint24_to_t_uint24(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // recipient\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // amountOut\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // amountInMaximum\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // sqrtPriceLimitX96\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_uint160_to_t_uint160(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encode_t_uint160_to_t_uint160(value, pos) {\n        mstore(pos, cleanup_t_uint160(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint24_to_t_uint24_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint24(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ISwapRouter_$187__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ISwapRouter_$187_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$115_memory_ptr__to_t_struct$_ExactInputSingleParams_$115_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactInputSingleParams_$115_memory_ptr_to_t_struct$_ExactInputSingleParams_$115_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_struct$_ExactOutputSingleParams_$159_memory_ptr__to_t_struct$_ExactOutputSingleParams_$159_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_struct$_ExactOutputSingleParams_$159_memory_ptr_to_t_struct$_ExactOutputSingleParams_$159_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint24_to_t_uint24_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint24(value) -> cleaned {\n        cleaned := and(value, 0xffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ISwapRouter_$187_to_t_address(value) -> converted {\n        converted := convert_t_contract$_ISwapRouter_$187_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ISwapRouter_$187_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 5,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "231:4767:4:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "231:4767:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;954:37;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1463:1230;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3321:1675;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;691:96;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;954:37;987:4;954:37;:::o;1463:1230::-;1566:17;1711:78;1743:8;1753:10;1773:4;1780:8;1711:31;:78::i;:::-;1844:67;1871:8;744:42;1902:8;1844:26;:67::i;:::-;2159:48;2222:345;;;;;;;;2284:8;2222:345;;;;;;2320:9;2222:345;;;;;;987:4;2222:345;;;;;;2388:10;2222:345;;;;;;2426:15;2222:345;;;;2469:8;2222:345;;;;2513:1;2222:345;;;;2551:1;2222:345;;;;;2159:408;;744:42;2651:27;;;2679:6;2651:35;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2639:47;;1463:1230;;;;;;:::o;3321:1675::-;3451:16;3545:85;3577:8;3587:10;3607:4;3614:15;3545:31;:85::i;:::-;3856:74;3883:8;744:42;3914:15;3856:26;:74::i;:::-;3941:49;4005:361;;;;;;;;4068:8;4005:361;;;;;;4104:9;4005:361;;;;;;987:4;4005:361;;;;;;4172:10;4005:361;;;;;;4210:15;4005:361;;;;4254:9;4005:361;;;;4298:15;4005:361;;;;4350:1;4005:361;;;;;3941:425;;744:42;4490:28;;;4519:6;4490:36;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4479:47;;4797:15;4786:8;:26;4782:208;;;4828:60;4855:8;744:42;4886:1;4828:26;:60::i;:::-;4902:77;4930:8;4940:10;4970:8;4952:15;:26;4902:27;:77::i;:::-;4782:208;3321:1675;;;;;;;:::o;691:96::-;744:42;691:96;:::o;561:358:3:-;701:12;715:17;748:5;:10;;782:28;;;812:4;818:2;822:5;759:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;748:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;700:129;;;;847:7;:57;;;;;874:1;859:4;:11;:16;:44;;;;890:4;879:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;859:44;847:57;839:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;561:358;;;;;;:::o;1873:307::-;1986:12;2000:17;2021:5;:10;;2055:23;;;2080:2;2084:5;2032:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2021:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1985:106;;;;2109:7;:57;;;;;2136:1;2121:4;:11;:16;:44;;;;2152:4;2141:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2121:44;2109:57;2101:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1873:307;;;;;:::o;1211:309::-;1325:12;1339:17;1360:5;:10;;1394:24;;;1420:2;1424:5;1371:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1360:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1324:107;;;;1449:7;:57;;;;;1476:1;1461:4;:11;:16;:44;;;;1492:4;1481:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1461:44;1449:57;1441:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1211:309;;;;;:::o;7:139:5:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:143::-;;385:6;379:13;370:22;;401:33;428:5;401:33;:::i;:::-;360:80;;;;:::o;446:284::-;;565:2;553:9;544:7;540:23;536:32;533:2;;;581:1;578;571:12;533:2;624:1;649:64;705:7;696:6;685:9;681:22;649:64;:::i;:::-;639:74;;595:128;523:207;;;;:::o;736:552::-;;;;878:2;866:9;857:7;853:23;849:32;846:2;;;894:1;891;884:12;846:2;937:1;962:53;1007:7;998:6;987:9;983:22;962:53;:::i;:::-;952:63;;908:117;1064:2;1090:53;1135:7;1126:6;1115:9;1111:22;1090:53;:::i;:::-;1080:63;;1035:118;1192:2;1218:53;1263:7;1254:6;1243:9;1239:22;1218:53;:::i;:::-;1208:63;;1163:118;836:452;;;;;:::o;1294:698::-;;;;;1453:3;1441:9;1432:7;1428:23;1424:33;1421:2;;;1470:1;1467;1460:12;1421:2;1513:1;1538:53;1583:7;1574:6;1563:9;1559:22;1538:53;:::i;:::-;1528:63;;1484:117;1640:2;1666:53;1711:7;1702:6;1691:9;1687:22;1666:53;:::i;:::-;1656:63;;1611:118;1768:2;1794:53;1839:7;1830:6;1819:9;1815:22;1794:53;:::i;:::-;1784:63;;1739:118;1896:2;1922:53;1967:7;1958:6;1947:9;1943:22;1922:53;:::i;:::-;1912:63;;1867:118;1411:581;;;;;;;:::o;1998:108::-;2075:24;2093:5;2075:24;:::i;:::-;2070:3;2063:37;2053:53;;:::o;2112:169::-;2218:56;2268:5;2218:56;:::i;:::-;2213:3;2206:69;2196:85;;:::o;2381:1623::-;2556:6;2551:3;2547:16;2648:4;2641:5;2637:16;2631:23;2667:63;2724:4;2719:3;2715:14;2701:12;2667:63;:::i;:::-;2573:167;2826:4;2819:5;2815:16;2809:23;2845:63;2902:4;2897:3;2893:14;2879:12;2845:63;:::i;:::-;2750:168;2999:4;2992:5;2988:16;2982:23;3018:61;3073:4;3068:3;3064:14;3050:12;3018:61;:::i;:::-;2928:161;3176:4;3169:5;3165:16;3159:23;3195:63;3252:4;3247:3;3243:14;3229:12;3195:63;:::i;:::-;3099:169;3354:4;3347:5;3343:16;3337:23;3373:63;3430:4;3425:3;3421:14;3407:12;3373:63;:::i;:::-;3278:168;3532:4;3525:5;3521:16;3515:23;3551:63;3608:4;3603:3;3599:14;3585:12;3551:63;:::i;:::-;3456:168;3718:4;3711:5;3707:16;3701:23;3737:63;3794:4;3789:3;3785:14;3771:12;3737:63;:::i;:::-;3634:176;3905:4;3898:5;3894:16;3888:23;3924:63;3981:4;3976:3;3972:14;3958:12;3924:63;:::i;:::-;3820:177;2525:1479;;;:::o;4106:1625::-;4283:6;4278:3;4274:16;4375:4;4368:5;4364:16;4358:23;4394:63;4451:4;4446:3;4442:14;4428:12;4394:63;:::i;:::-;4300:167;4553:4;4546:5;4542:16;4536:23;4572:63;4629:4;4624:3;4620:14;4606:12;4572:63;:::i;:::-;4477:168;4726:4;4719:5;4715:16;4709:23;4745:61;4800:4;4795:3;4791:14;4777:12;4745:61;:::i;:::-;4655:161;4903:4;4896:5;4892:16;4886:23;4922:63;4979:4;4974:3;4970:14;4956:12;4922:63;:::i;:::-;4826:169;5081:4;5074:5;5070:16;5064:23;5100:63;5157:4;5152:3;5148:14;5134:12;5100:63;:::i;:::-;5005:168;5260:4;5253:5;5249:16;5243:23;5279:63;5336:4;5331:3;5327:14;5313:12;5279:63;:::i;:::-;5183:169;5445:4;5438:5;5434:16;5428:23;5464:63;5521:4;5516:3;5512:14;5498:12;5464:63;:::i;:::-;5362:175;5632:4;5625:5;5621:16;5615:23;5651:63;5708:4;5703:3;5699:14;5685:12;5651:63;:::i;:::-;5547:177;4252:1479;;;:::o;5737:108::-;5814:24;5832:5;5814:24;:::i;:::-;5809:3;5802:37;5792:53;;:::o;5851:105::-;5926:23;5943:5;5926:23;:::i;:::-;5921:3;5914:36;5904:52;;:::o;5962:115::-;6047:23;6064:5;6047:23;:::i;:::-;6042:3;6035:36;6025:52;;:::o;6083:108::-;6160:24;6178:5;6160:24;:::i;:::-;6155:3;6148:37;6138:53;;:::o;6197:118::-;6284:24;6302:5;6284:24;:::i;:::-;6279:3;6272:37;6262:53;;:::o;6321:260::-;;6471:2;6460:9;6456:18;6448:26;;6484:90;6571:1;6560:9;6556:17;6547:6;6484:90;:::i;:::-;6438:143;;;;:::o;6587:379::-;;6796:3;6785:9;6781:19;6773:27;;6810:149;6956:1;6945:9;6941:17;6932:6;6810:149;:::i;:::-;6763:203;;;;:::o;6972:383::-;;7183:3;7172:9;7168:19;7160:27;;7197:151;7345:1;7334:9;7330:17;7321:6;7197:151;:::i;:::-;7150:205;;;;:::o;7361:218::-;;7490:2;7479:9;7475:18;7467:26;;7503:69;7569:1;7558:9;7554:17;7545:6;7503:69;:::i;:::-;7457:122;;;;:::o;7585:222::-;;7716:2;7705:9;7701:18;7693:26;;7729:71;7797:1;7786:9;7782:17;7773:6;7729:71;:::i;:::-;7683:124;;;;:::o;7813:96::-;;7879:24;7897:5;7879:24;:::i;:::-;7868:35;;7858:51;;;:::o;7915:126::-;;7992:42;7985:5;7981:54;7970:65;;7960:81;;;:::o;8047:91::-;;8123:8;8116:5;8112:20;8101:31;;8091:47;;;:::o;8144:77::-;;8210:5;8199:16;;8189:32;;;:::o;8227:164::-;;8329:56;8379:5;8329:56;:::i;:::-;8316:69;;8306:85;;;:::o;8397:132::-;;8499:24;8517:5;8499:24;:::i;:::-;8486:37;;8476:53;;;:::o;8535:122::-;8608:24;8626:5;8608:24;:::i;:::-;8601:5;8598:35;8588:2;;8647:1;8644;8637:12;8588:2;8578:79;:::o;8663:122::-;8736:24;8754:5;8736:24;:::i;:::-;8729:5;8726:35;8716:2;;8775:1;8772;8765:12;8716:2;8706:79;:::o",
  "source": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\npragma abicoder v2;\n\nimport '@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol';\nimport '@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol';\n\ncontract SwapExamples {\n    // For the scope of these swap examples,\n    // we will detail the design considerations when using\n    // `exactInput`, `exactInputSingle`, `exactOutput`, and  `exactOutputSingle`.\n\n    // It should be noted that for the sake of these examples, we purposefully pass in the swap router instead of inherit the swap router for simplicity.\n    // More advanced example contracts will detail how to inherit the swap router safely.\n\n    ISwapRouter public constant swapRouter = ISwapRouter(0xE592427A0AEce92De3Edee1F18E0157C05861564);\n\n    // This example swaps DAI/WETH9 for single path swaps and DAI/USDC/WETH9 for multi path swaps.\n\n\n    // For this example, we will set the pool fee to 0.3%.\n    uint24 public constant poolFee = 3000;\n\n\n    /// @notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n    /// using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n    /// @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n    /// @param amountIn The exact amount of DAI that will be swapped for WETH9.\n    /// @return amountOut The amount of WETH9 received.\n    function swapExactInputSingle(uint256 amountIn, address token_in, address token_out) external returns (uint256 amountOut) {\n        // msg.sender must approve this contract\n\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper.safeTransferFrom(token_in, msg.sender, address(this), amountIn);\n\n        // Approve the router to spend DAI.\n        TransferHelper.safeApprove(token_in, address(swapRouter), amountIn);\n\n        // Naively set amountOutMinimum to 0. In production, use an oracle or other data source to choose a safer value for amountOutMinimum.\n        // We also set the sqrtPriceLimitx96 to be 0 to ensure we swap our exact input amount.\n        ISwapRouter.ExactInputSingleParams memory params =\n            ISwapRouter.ExactInputSingleParams({\n                tokenIn: token_in,\n                tokenOut: token_out,\n                fee: poolFee,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountIn: amountIn,\n                amountOutMinimum: 0,\n                sqrtPriceLimitX96: 0\n            });\n\n        // The call to `exactInputSingle` executes the swap.\n        amountOut = swapRouter.exactInputSingle(params);\n    }\n\n    /// @notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n    /// @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n    /// the calling address will need to approve for a slightly higher amount, anticipating some variance.\n    /// @param amountOut The exact amount of WETH9 to receive from the swap.\n    /// @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n    /// @return amountIn The amount of DAI actually spent in the swap.\n    function swapExactOutputSingle(uint256 amountOut, uint256 amountInMaximum, address token_in, address token_out) external returns (uint256 amountIn) {\n        // Transfer the specified amount of DAI to this contract.\n        TransferHelper.safeTransferFrom(token_in, msg.sender, address(this), amountInMaximum);\n\n        // Approve the router to spend the specifed `amountInMaximum` of DAI.\n        // In production, you should choose the maximum amount to spend based on oracles or other data sources to acheive a better swap.\n        TransferHelper.safeApprove(token_in, address(swapRouter), amountInMaximum);\n\n        ISwapRouter.ExactOutputSingleParams memory params =\n            ISwapRouter.ExactOutputSingleParams({\n                tokenIn: token_in,\n                tokenOut: token_out,\n                fee: poolFee,\n                recipient: msg.sender,\n                deadline: block.timestamp,\n                amountOut: amountOut,\n                amountInMaximum: amountInMaximum,\n                sqrtPriceLimitX96: 0\n            });\n\n        // Executes the swap returning the amountIn needed to spend to receive the desired amountOut.\n        amountIn = swapRouter.exactOutputSingle(params);\n\n        // For exact output swaps, the amountInMaximum may not have all been spent.\n        // If the actual amount spent (amountIn) is less than the specified maximum amount, we must refund the msg.sender and approve the swapRouter to spend 0.\n        if (amountIn < amountInMaximum) {\n            TransferHelper.safeApprove(token_in, address(swapRouter), 0);\n            TransferHelper.safeTransfer(token_in, msg.sender, amountInMaximum - amountIn);\n        }\n    }\n}",
  "sourcePath": "/Users/fatih/Smart Contract/uniswap_v3_single_swap/contracts/SwapExamples.sol",
  "ast": {
    "absolutePath": "project:/contracts/SwapExamples.sol",
    "exportedSymbols": {
      "IERC20": [
        77
      ],
      "ISwapRouter": [
        187
      ],
      "IUniswapV3SwapCallback": [
        91
      ],
      "SwapExamples": [
        525
      ],
      "TransferHelper": [
        358
      ]
    },
    "id": 526,
    "license": "GPL-2.0-or-later",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 360,
        "literals": [
          "solidity",
          "=",
          "0.7",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "45:23:4"
      },
      {
        "id": 361,
        "literals": [
          "abicoder",
          "v2"
        ],
        "nodeType": "PragmaDirective",
        "src": "69:19:4"
      },
      {
        "absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
        "id": 362,
        "nodeType": "ImportDirective",
        "scope": 526,
        "sourceUnit": 359,
        "src": "90:70:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
        "id": 363,
        "nodeType": "ImportDirective",
        "scope": 526,
        "sourceUnit": 188,
        "src": "161:68:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 525,
        "linearizedBaseContracts": [
          525
        ],
        "name": "SwapExamples",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "c31c9c07",
            "id": 368,
            "mutability": "constant",
            "name": "swapRouter",
            "nodeType": "VariableDeclaration",
            "scope": 525,
            "src": "691:96:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ISwapRouter_$187",
              "typeString": "contract ISwapRouter"
            },
            "typeName": {
              "id": 364,
              "name": "ISwapRouter",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 187,
              "src": "691:11:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$187",
                "typeString": "contract ISwapRouter"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
                  "id": 366,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "744:42:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                ],
                "id": 365,
                "name": "ISwapRouter",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 187,
                "src": "732:11:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$187_$",
                  "typeString": "type(contract ISwapRouter)"
                }
              },
              "id": 367,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "732:55:4",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ISwapRouter_$187",
                "typeString": "contract ISwapRouter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "089fe6aa",
            "id": 371,
            "mutability": "constant",
            "name": "poolFee",
            "nodeType": "VariableDeclaration",
            "scope": 525,
            "src": "954:37:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint24",
              "typeString": "uint24"
            },
            "typeName": {
              "id": 369,
              "name": "uint24",
              "nodeType": "ElementaryTypeName",
              "src": "954:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint24",
                "typeString": "uint24"
              }
            },
            "value": {
              "hexValue": "33303030",
              "id": 370,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "987:4:4",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_3000_by_1",
                "typeString": "int_const 3000"
              },
              "value": "3000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 432,
              "nodeType": "Block",
              "src": "1585:1108:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 386,
                        "name": "token_in",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "1743:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 387,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1753:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1753:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 391,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1773:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapExamples_$525",
                              "typeString": "contract SwapExamples"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapExamples_$525",
                              "typeString": "contract SwapExamples"
                            }
                          ],
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1765:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 389,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1765:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1765:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 393,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "1780:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 383,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "1711:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$358_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 239,
                      "src": "1711:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1711:78:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 395,
                  "nodeType": "ExpressionStatement",
                  "src": "1711:78:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 399,
                        "name": "token_in",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "1871:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 402,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "1889:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$187",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$187",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 401,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1881:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 400,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1881:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1881:19:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 404,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "1902:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 396,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "1844:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$358_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 331,
                      "src": "1844:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1844:67:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 406,
                  "nodeType": "ExpressionStatement",
                  "src": "1844:67:4"
                },
                {
                  "assignments": [
                    410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 410,
                      "mutability": "mutable",
                      "name": "params",
                      "nodeType": "VariableDeclaration",
                      "scope": 432,
                      "src": "2159:48:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactInputSingleParams"
                      },
                      "typeName": {
                        "id": 409,
                        "name": "ISwapRouter.ExactInputSingleParams",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 115,
                        "src": "2159:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactInputSingleParams_$115_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactInputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 424,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 413,
                        "name": "token_in",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 376,
                        "src": "2284:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 414,
                        "name": "token_out",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 378,
                        "src": "2320:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 415,
                        "name": "poolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "2352:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 416,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2388:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2388:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 418,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "2426:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "2426:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 420,
                        "name": "amountIn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 374,
                        "src": "2469:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2513:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "30",
                        "id": 422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2551:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 411,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "2222:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$187_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactInputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 115,
                      "src": "2222:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactInputSingleParams_$115_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                      }
                    },
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountIn",
                      "amountOutMinimum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2222:345:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2159:408:4"
                },
                {
                  "expression": {
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 425,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 381,
                      "src": "2639:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 428,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "2679:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                          }
                        ],
                        "expression": {
                          "id": 426,
                          "name": "swapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 368,
                          "src": "2651:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISwapRouter_$187",
                            "typeString": "contract ISwapRouter"
                          }
                        },
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exactInputSingle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 123,
                        "src": "2651:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_ExactInputSingleParams_$115_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                        }
                      },
                      "id": 429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2651:35:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2639:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "2639:47:4"
                }
              ]
            },
            "documentation": {
              "id": 372,
              "nodeType": "StructuredDocumentation",
              "src": "999:459:4",
              "text": "@notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The exact amount of DAI that will be swapped for WETH9.\n @return amountOut The amount of WETH9 received."
            },
            "functionSelector": "4ce4dca5",
            "id": 433,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactInputSingle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 374,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "1493:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1493:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 376,
                  "mutability": "mutable",
                  "name": "token_in",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "1511:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1511:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 378,
                  "mutability": "mutable",
                  "name": "token_out",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "1529:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1492:55:4"
            },
            "returnParameters": {
              "id": 382,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 381,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "1566:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1566:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1565:19:4"
            },
            "scope": 525,
            "src": "1463:1230:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 523,
              "nodeType": "Block",
              "src": "3469:1527:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 450,
                        "name": "token_in",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "3577:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 451,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3587:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3587:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 455,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3607:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_SwapExamples_$525",
                              "typeString": "contract SwapExamples"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_SwapExamples_$525",
                              "typeString": "contract SwapExamples"
                            }
                          ],
                          "id": 454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3599:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 453,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3599:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3599:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 457,
                        "name": "amountInMaximum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "3614:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 447,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "3545:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$358_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 239,
                      "src": "3545:31:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3545:85:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 459,
                  "nodeType": "ExpressionStatement",
                  "src": "3545:85:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 463,
                        "name": "token_in",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "3883:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 466,
                            "name": "swapRouter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "3901:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISwapRouter_$187",
                              "typeString": "contract ISwapRouter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ISwapRouter_$187",
                              "typeString": "contract ISwapRouter"
                            }
                          ],
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3893:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 464,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3893:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3893:19:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 468,
                        "name": "amountInMaximum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "3914:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 460,
                        "name": "TransferHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 358,
                        "src": "3856:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TransferHelper_$358_$",
                          "typeString": "type(library TransferHelper)"
                        }
                      },
                      "id": 462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeApprove",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 331,
                      "src": "3856:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 469,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3856:74:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 470,
                  "nodeType": "ExpressionStatement",
                  "src": "3856:74:4"
                },
                {
                  "assignments": [
                    474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 474,
                      "mutability": "mutable",
                      "name": "params",
                      "nodeType": "VariableDeclaration",
                      "scope": 523,
                      "src": "3941:49:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExactOutputSingleParams_$159_memory_ptr",
                        "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                      },
                      "typeName": {
                        "id": 473,
                        "name": "ISwapRouter.ExactOutputSingleParams",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 159,
                        "src": "3941:35:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExactOutputSingleParams_$159_storage_ptr",
                          "typeString": "struct ISwapRouter.ExactOutputSingleParams"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 488,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 477,
                        "name": "token_in",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 440,
                        "src": "4068:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 478,
                        "name": "token_out",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 442,
                        "src": "4104:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 479,
                        "name": "poolFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "4136:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        }
                      },
                      {
                        "expression": {
                          "id": 480,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4172:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4172:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "expression": {
                          "id": 482,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "4210:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "4210:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 484,
                        "name": "amountOut",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 436,
                        "src": "4254:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 485,
                        "name": "amountInMaximum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "4298:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4350:1:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint24",
                          "typeString": "uint24"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 475,
                        "name": "ISwapRouter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 187,
                        "src": "4005:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ISwapRouter_$187_$",
                          "typeString": "type(contract ISwapRouter)"
                        }
                      },
                      "id": 476,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ExactOutputSingleParams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 159,
                      "src": "4005:35:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ExactOutputSingleParams_$159_storage_ptr_$",
                        "typeString": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
                      }
                    },
                    "id": 487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "tokenIn",
                      "tokenOut",
                      "fee",
                      "recipient",
                      "deadline",
                      "amountOut",
                      "amountInMaximum",
                      "sqrtPriceLimitX96"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4005:361:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$159_memory_ptr",
                      "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3941:425:4"
                },
                {
                  "expression": {
                    "id": 494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 489,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "4479:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 492,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 474,
                          "src": "4519:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExactOutputSingleParams_$159_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_ExactOutputSingleParams_$159_memory_ptr",
                            "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                          }
                        ],
                        "expression": {
                          "id": 490,
                          "name": "swapRouter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 368,
                          "src": "4490:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISwapRouter_$187",
                            "typeString": "contract ISwapRouter"
                          }
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "exactOutputSingle",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 167,
                        "src": "4490:28:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_struct$_ExactOutputSingleParams_$159_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
                        }
                      },
                      "id": 493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4490:36:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4479:47:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 495,
                  "nodeType": "ExpressionStatement",
                  "src": "4479:47:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 496,
                      "name": "amountIn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 445,
                      "src": "4786:8:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 497,
                      "name": "amountInMaximum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 438,
                      "src": "4797:15:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4786:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 522,
                  "nodeType": "IfStatement",
                  "src": "4782:208:4",
                  "trueBody": {
                    "id": 521,
                    "nodeType": "Block",
                    "src": "4814:176:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 502,
                              "name": "token_in",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 440,
                              "src": "4855:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 505,
                                  "name": "swapRouter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 368,
                                  "src": "4873:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ISwapRouter_$187",
                                    "typeString": "contract ISwapRouter"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ISwapRouter_$187",
                                    "typeString": "contract ISwapRouter"
                                  }
                                ],
                                "id": 504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4865:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 503,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4865:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4865:19:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "30",
                              "id": 507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4886:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "expression": {
                              "id": 499,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "4828:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$358_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 501,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeApprove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 331,
                            "src": "4828:26:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4828:60:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 509,
                        "nodeType": "ExpressionStatement",
                        "src": "4828:60:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 513,
                              "name": "token_in",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 440,
                              "src": "4930:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 514,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4940:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4940:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 516,
                                "name": "amountInMaximum",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 438,
                                "src": "4952:15:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 517,
                                "name": "amountIn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 445,
                                "src": "4970:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4952:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 510,
                              "name": "TransferHelper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 358,
                              "src": "4902:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_TransferHelper_$358_$",
                                "typeString": "type(library TransferHelper)"
                              }
                            },
                            "id": 512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 285,
                            "src": "4902:27:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4902:77:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 520,
                        "nodeType": "ExpressionStatement",
                        "src": "4902:77:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 434,
              "nodeType": "StructuredDocumentation",
              "src": "2699:617:4",
              "text": "@notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n the calling address will need to approve for a slightly higher amount, anticipating some variance.\n @param amountOut The exact amount of WETH9 to receive from the swap.\n @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n @return amountIn The amount of DAI actually spent in the swap."
            },
            "functionSelector": "9d0b14c5",
            "id": 524,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapExactOutputSingle",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nodeType": "VariableDeclaration",
                  "scope": 524,
                  "src": "3352:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3352:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "mutability": "mutable",
                  "name": "amountInMaximum",
                  "nodeType": "VariableDeclaration",
                  "scope": 524,
                  "src": "3371:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3371:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 440,
                  "mutability": "mutable",
                  "name": "token_in",
                  "nodeType": "VariableDeclaration",
                  "scope": 524,
                  "src": "3396:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 439,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3396:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 442,
                  "mutability": "mutable",
                  "name": "token_out",
                  "nodeType": "VariableDeclaration",
                  "scope": 524,
                  "src": "3414:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 441,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3414:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3351:81:4"
            },
            "returnParameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 445,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nodeType": "VariableDeclaration",
                  "scope": 524,
                  "src": "3451:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 444,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3451:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3450:18:4"
            },
            "scope": 525,
            "src": "3321:1675:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 526,
        "src": "231:4767:4"
      }
    ],
    "src": "45:4953:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "project:/contracts/SwapExamples.sol",
      "exportedSymbols": {
        "IERC20": [
          77
        ],
        "ISwapRouter": [
          187
        ],
        "IUniswapV3SwapCallback": [
          91
        ],
        "SwapExamples": [
          525
        ],
        "TransferHelper": [
          358
        ]
      },
      "license": "GPL-2.0-or-later"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "=",
            "0.7",
            ".6"
          ]
        },
        "id": 360,
        "name": "PragmaDirective",
        "src": "45:23:4"
      },
      {
        "attributes": {
          "literals": [
            "abicoder",
            "v2"
          ]
        },
        "id": 361,
        "name": "PragmaDirective",
        "src": "69:19:4"
      },
      {
        "attributes": {
          "SourceUnit": 359,
          "absolutePath": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
          "file": "@uniswap/v3-periphery/contracts/libraries/TransferHelper.sol",
          "scope": 526,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 362,
        "name": "ImportDirective",
        "src": "90:70:4"
      },
      {
        "attributes": {
          "SourceUnit": 188,
          "absolutePath": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
          "file": "@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol",
          "scope": 526,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 363,
        "name": "ImportDirective",
        "src": "161:68:4"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            525
          ],
          "name": "SwapExamples",
          "scope": 526
        },
        "children": [
          {
            "attributes": {
              "constant": true,
              "functionSelector": "c31c9c07",
              "mutability": "constant",
              "name": "swapRouter",
              "scope": 525,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract ISwapRouter",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "ISwapRouter",
                  "referencedDeclaration": 187,
                  "type": "contract ISwapRouter"
                },
                "id": 364,
                "name": "UserDefinedTypeName",
                "src": "691:11:4"
              },
              {
                "attributes": {
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "isStructConstructorCall": false,
                  "lValueRequested": false,
                  "names": [
                    null
                  ],
                  "tryCall": false,
                  "type": "contract ISwapRouter",
                  "type_conversion": true
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 187,
                      "type": "type(contract ISwapRouter)",
                      "value": "ISwapRouter"
                    },
                    "id": 365,
                    "name": "Identifier",
                    "src": "732:11:4"
                  },
                  {
                    "attributes": {
                      "hexvalue": "307845353932343237413041456365393244653345646565314631384530313537433035383631353634",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "token": "number",
                      "type": "address payable",
                      "value": "0xE592427A0AEce92De3Edee1F18E0157C05861564"
                    },
                    "id": 366,
                    "name": "Literal",
                    "src": "744:42:4"
                  }
                ],
                "id": 367,
                "name": "FunctionCall",
                "src": "732:55:4"
              }
            ],
            "id": 368,
            "name": "VariableDeclaration",
            "src": "691:96:4"
          },
          {
            "attributes": {
              "constant": true,
              "functionSelector": "089fe6aa",
              "mutability": "constant",
              "name": "poolFee",
              "scope": 525,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint24",
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint24",
                  "type": "uint24"
                },
                "id": 369,
                "name": "ElementaryTypeName",
                "src": "954:6:4"
              },
              {
                "attributes": {
                  "hexvalue": "33303030",
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "lValueRequested": false,
                  "token": "number",
                  "type": "int_const 3000",
                  "value": "3000"
                },
                "id": 370,
                "name": "Literal",
                "src": "987:4:4"
              }
            ],
            "id": 371,
            "name": "VariableDeclaration",
            "src": "954:37:4"
          },
          {
            "attributes": {
              "functionSelector": "4ce4dca5",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "swapExactInputSingle",
              "scope": 525,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9\n using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router.\n @dev The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.\n @param amountIn The exact amount of DAI that will be swapped for WETH9.\n @return amountOut The amount of WETH9 received."
                },
                "id": 372,
                "name": "StructuredDocumentation",
                "src": "999:459:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "scope": 433,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 373,
                        "name": "ElementaryTypeName",
                        "src": "1493:7:4"
                      }
                    ],
                    "id": 374,
                    "name": "VariableDeclaration",
                    "src": "1493:16:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "token_in",
                      "scope": 433,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 375,
                        "name": "ElementaryTypeName",
                        "src": "1511:7:4"
                      }
                    ],
                    "id": 376,
                    "name": "VariableDeclaration",
                    "src": "1511:16:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "token_out",
                      "scope": 433,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 377,
                        "name": "ElementaryTypeName",
                        "src": "1529:7:4"
                      }
                    ],
                    "id": 378,
                    "name": "VariableDeclaration",
                    "src": "1529:17:4"
                  }
                ],
                "id": 379,
                "name": "ParameterList",
                "src": "1492:55:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "scope": 433,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 380,
                        "name": "ElementaryTypeName",
                        "src": "1566:7:4"
                      }
                    ],
                    "id": 381,
                    "name": "VariableDeclaration",
                    "src": "1566:17:4"
                  }
                ],
                "id": 382,
                "name": "ParameterList",
                "src": "1565:19:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "safeTransferFrom",
                              "referencedDeclaration": 239,
                              "type": "function (address,address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 358,
                                  "type": "type(library TransferHelper)",
                                  "value": "TransferHelper"
                                },
                                "id": 383,
                                "name": "Identifier",
                                "src": "1711:14:4"
                              }
                            ],
                            "id": 385,
                            "name": "MemberAccess",
                            "src": "1711:31:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 376,
                              "type": "address",
                              "value": "token_in"
                            },
                            "id": 386,
                            "name": "Identifier",
                            "src": "1743:8:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 387,
                                "name": "Identifier",
                                "src": "1753:3:4"
                              }
                            ],
                            "id": 388,
                            "name": "MemberAccess",
                            "src": "1753:10:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SwapExamples_$525",
                                      "typeString": "contract SwapExamples"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 389,
                                    "name": "ElementaryTypeName",
                                    "src": "1765:7:4"
                                  }
                                ],
                                "id": 390,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1765:7:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract SwapExamples",
                                  "value": "this"
                                },
                                "id": 391,
                                "name": "Identifier",
                                "src": "1773:4:4"
                              }
                            ],
                            "id": 392,
                            "name": "FunctionCall",
                            "src": "1765:13:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 374,
                              "type": "uint256",
                              "value": "amountIn"
                            },
                            "id": 393,
                            "name": "Identifier",
                            "src": "1780:8:4"
                          }
                        ],
                        "id": 394,
                        "name": "FunctionCall",
                        "src": "1711:78:4"
                      }
                    ],
                    "id": 395,
                    "name": "ExpressionStatement",
                    "src": "1711:78:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "safeApprove",
                              "referencedDeclaration": 331,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 358,
                                  "type": "type(library TransferHelper)",
                                  "value": "TransferHelper"
                                },
                                "id": 396,
                                "name": "Identifier",
                                "src": "1844:14:4"
                              }
                            ],
                            "id": 398,
                            "name": "MemberAccess",
                            "src": "1844:26:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 376,
                              "type": "address",
                              "value": "token_in"
                            },
                            "id": 399,
                            "name": "Identifier",
                            "src": "1871:8:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ISwapRouter_$187",
                                      "typeString": "contract ISwapRouter"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 400,
                                    "name": "ElementaryTypeName",
                                    "src": "1881:7:4"
                                  }
                                ],
                                "id": 401,
                                "name": "ElementaryTypeNameExpression",
                                "src": "1881:7:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 368,
                                  "type": "contract ISwapRouter",
                                  "value": "swapRouter"
                                },
                                "id": 402,
                                "name": "Identifier",
                                "src": "1889:10:4"
                              }
                            ],
                            "id": 403,
                            "name": "FunctionCall",
                            "src": "1881:19:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 374,
                              "type": "uint256",
                              "value": "amountIn"
                            },
                            "id": 404,
                            "name": "Identifier",
                            "src": "1902:8:4"
                          }
                        ],
                        "id": 405,
                        "name": "FunctionCall",
                        "src": "1844:67:4"
                      }
                    ],
                    "id": 406,
                    "name": "ExpressionStatement",
                    "src": "1844:67:4"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        410
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "params",
                          "scope": 432,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct ISwapRouter.ExactInputSingleParams",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "ISwapRouter.ExactInputSingleParams",
                              "referencedDeclaration": 115,
                              "type": "struct ISwapRouter.ExactInputSingleParams"
                            },
                            "id": 409,
                            "name": "UserDefinedTypeName",
                            "src": "2159:34:4"
                          }
                        ],
                        "id": 410,
                        "name": "VariableDeclaration",
                        "src": "2159:48:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "tokenIn",
                            "tokenOut",
                            "fee",
                            "recipient",
                            "deadline",
                            "amountIn",
                            "amountOutMinimum",
                            "sqrtPriceLimitX96"
                          ],
                          "tryCall": false,
                          "type": "struct ISwapRouter.ExactInputSingleParams memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "ExactInputSingleParams",
                              "referencedDeclaration": 115,
                              "type": "type(struct ISwapRouter.ExactInputSingleParams storage pointer)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 187,
                                  "type": "type(contract ISwapRouter)",
                                  "value": "ISwapRouter"
                                },
                                "id": 411,
                                "name": "Identifier",
                                "src": "2222:11:4"
                              }
                            ],
                            "id": 412,
                            "name": "MemberAccess",
                            "src": "2222:34:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 376,
                              "type": "address",
                              "value": "token_in"
                            },
                            "id": 413,
                            "name": "Identifier",
                            "src": "2284:8:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 378,
                              "type": "address",
                              "value": "token_out"
                            },
                            "id": 414,
                            "name": "Identifier",
                            "src": "2320:9:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 371,
                              "type": "uint24",
                              "value": "poolFee"
                            },
                            "id": 415,
                            "name": "Identifier",
                            "src": "2352:7:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 416,
                                "name": "Identifier",
                                "src": "2388:3:4"
                              }
                            ],
                            "id": 417,
                            "name": "MemberAccess",
                            "src": "2388:10:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "timestamp",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967292,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 418,
                                "name": "Identifier",
                                "src": "2426:5:4"
                              }
                            ],
                            "id": 419,
                            "name": "MemberAccess",
                            "src": "2426:15:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 374,
                              "type": "uint256",
                              "value": "amountIn"
                            },
                            "id": 420,
                            "name": "Identifier",
                            "src": "2469:8:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 421,
                            "name": "Literal",
                            "src": "2513:1:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 422,
                            "name": "Literal",
                            "src": "2551:1:4"
                          }
                        ],
                        "id": 423,
                        "name": "FunctionCall",
                        "src": "2222:345:4"
                      }
                    ],
                    "id": 424,
                    "name": "VariableDeclarationStatement",
                    "src": "2159:408:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 381,
                              "type": "uint256",
                              "value": "amountOut"
                            },
                            "id": 425,
                            "name": "Identifier",
                            "src": "2639:9:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_ExactInputSingleParams_$115_memory_ptr",
                                      "typeString": "struct ISwapRouter.ExactInputSingleParams memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "exactInputSingle",
                                  "referencedDeclaration": 123,
                                  "type": "function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 368,
                                      "type": "contract ISwapRouter",
                                      "value": "swapRouter"
                                    },
                                    "id": 426,
                                    "name": "Identifier",
                                    "src": "2651:10:4"
                                  }
                                ],
                                "id": 427,
                                "name": "MemberAccess",
                                "src": "2651:27:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 410,
                                  "type": "struct ISwapRouter.ExactInputSingleParams memory",
                                  "value": "params"
                                },
                                "id": 428,
                                "name": "Identifier",
                                "src": "2679:6:4"
                              }
                            ],
                            "id": 429,
                            "name": "FunctionCall",
                            "src": "2651:35:4"
                          }
                        ],
                        "id": 430,
                        "name": "Assignment",
                        "src": "2639:47:4"
                      }
                    ],
                    "id": 431,
                    "name": "ExpressionStatement",
                    "src": "2639:47:4"
                  }
                ],
                "id": 432,
                "name": "Block",
                "src": "1585:1108:4"
              }
            ],
            "id": 433,
            "name": "FunctionDefinition",
            "src": "1463:1230:4"
          },
          {
            "attributes": {
              "functionSelector": "9d0b14c5",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "swapExactOutputSingle",
              "scope": 525,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH.\n @dev The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable,\n the calling address will need to approve for a slightly higher amount, anticipating some variance.\n @param amountOut The exact amount of WETH9 to receive from the swap.\n @param amountInMaximum The amount of DAI we are willing to spend to receive the specified amount of WETH9.\n @return amountIn The amount of DAI actually spent in the swap."
                },
                "id": 434,
                "name": "StructuredDocumentation",
                "src": "2699:617:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountOut",
                      "scope": 524,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 435,
                        "name": "ElementaryTypeName",
                        "src": "3352:7:4"
                      }
                    ],
                    "id": 436,
                    "name": "VariableDeclaration",
                    "src": "3352:17:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountInMaximum",
                      "scope": 524,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 437,
                        "name": "ElementaryTypeName",
                        "src": "3371:7:4"
                      }
                    ],
                    "id": 438,
                    "name": "VariableDeclaration",
                    "src": "3371:23:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "token_in",
                      "scope": 524,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 439,
                        "name": "ElementaryTypeName",
                        "src": "3396:7:4"
                      }
                    ],
                    "id": 440,
                    "name": "VariableDeclaration",
                    "src": "3396:16:4"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "token_out",
                      "scope": 524,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 441,
                        "name": "ElementaryTypeName",
                        "src": "3414:7:4"
                      }
                    ],
                    "id": 442,
                    "name": "VariableDeclaration",
                    "src": "3414:17:4"
                  }
                ],
                "id": 443,
                "name": "ParameterList",
                "src": "3351:81:4"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amountIn",
                      "scope": 524,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 444,
                        "name": "ElementaryTypeName",
                        "src": "3451:7:4"
                      }
                    ],
                    "id": 445,
                    "name": "VariableDeclaration",
                    "src": "3451:16:4"
                  }
                ],
                "id": 446,
                "name": "ParameterList",
                "src": "3450:18:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "safeTransferFrom",
                              "referencedDeclaration": 239,
                              "type": "function (address,address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 358,
                                  "type": "type(library TransferHelper)",
                                  "value": "TransferHelper"
                                },
                                "id": 447,
                                "name": "Identifier",
                                "src": "3545:14:4"
                              }
                            ],
                            "id": 449,
                            "name": "MemberAccess",
                            "src": "3545:31:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 440,
                              "type": "address",
                              "value": "token_in"
                            },
                            "id": 450,
                            "name": "Identifier",
                            "src": "3577:8:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 451,
                                "name": "Identifier",
                                "src": "3587:3:4"
                              }
                            ],
                            "id": 452,
                            "name": "MemberAccess",
                            "src": "3587:10:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_SwapExamples_$525",
                                      "typeString": "contract SwapExamples"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 453,
                                    "name": "ElementaryTypeName",
                                    "src": "3599:7:4"
                                  }
                                ],
                                "id": 454,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3599:7:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967268,
                                  "type": "contract SwapExamples",
                                  "value": "this"
                                },
                                "id": 455,
                                "name": "Identifier",
                                "src": "3607:4:4"
                              }
                            ],
                            "id": 456,
                            "name": "FunctionCall",
                            "src": "3599:13:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 438,
                              "type": "uint256",
                              "value": "amountInMaximum"
                            },
                            "id": 457,
                            "name": "Identifier",
                            "src": "3614:15:4"
                          }
                        ],
                        "id": 458,
                        "name": "FunctionCall",
                        "src": "3545:85:4"
                      }
                    ],
                    "id": 459,
                    "name": "ExpressionStatement",
                    "src": "3545:85:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "safeApprove",
                              "referencedDeclaration": 331,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 358,
                                  "type": "type(library TransferHelper)",
                                  "value": "TransferHelper"
                                },
                                "id": 460,
                                "name": "Identifier",
                                "src": "3856:14:4"
                              }
                            ],
                            "id": 462,
                            "name": "MemberAccess",
                            "src": "3856:26:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 440,
                              "type": "address",
                              "value": "token_in"
                            },
                            "id": 463,
                            "name": "Identifier",
                            "src": "3883:8:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_ISwapRouter_$187",
                                      "typeString": "contract ISwapRouter"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address"
                                    },
                                    "id": 464,
                                    "name": "ElementaryTypeName",
                                    "src": "3893:7:4"
                                  }
                                ],
                                "id": 465,
                                "name": "ElementaryTypeNameExpression",
                                "src": "3893:7:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 368,
                                  "type": "contract ISwapRouter",
                                  "value": "swapRouter"
                                },
                                "id": 466,
                                "name": "Identifier",
                                "src": "3901:10:4"
                              }
                            ],
                            "id": 467,
                            "name": "FunctionCall",
                            "src": "3893:19:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 438,
                              "type": "uint256",
                              "value": "amountInMaximum"
                            },
                            "id": 468,
                            "name": "Identifier",
                            "src": "3914:15:4"
                          }
                        ],
                        "id": 469,
                        "name": "FunctionCall",
                        "src": "3856:74:4"
                      }
                    ],
                    "id": 470,
                    "name": "ExpressionStatement",
                    "src": "3856:74:4"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        474
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "params",
                          "scope": 523,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct ISwapRouter.ExactOutputSingleParams",
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "ISwapRouter.ExactOutputSingleParams",
                              "referencedDeclaration": 159,
                              "type": "struct ISwapRouter.ExactOutputSingleParams"
                            },
                            "id": 473,
                            "name": "UserDefinedTypeName",
                            "src": "3941:35:4"
                          }
                        ],
                        "id": 474,
                        "name": "VariableDeclaration",
                        "src": "3941:49:4"
                      },
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "tokenIn",
                            "tokenOut",
                            "fee",
                            "recipient",
                            "deadline",
                            "amountOut",
                            "amountInMaximum",
                            "sqrtPriceLimitX96"
                          ],
                          "tryCall": false,
                          "type": "struct ISwapRouter.ExactOutputSingleParams memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint24",
                                  "typeString": "uint24"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "ExactOutputSingleParams",
                              "referencedDeclaration": 159,
                              "type": "type(struct ISwapRouter.ExactOutputSingleParams storage pointer)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 187,
                                  "type": "type(contract ISwapRouter)",
                                  "value": "ISwapRouter"
                                },
                                "id": 475,
                                "name": "Identifier",
                                "src": "4005:11:4"
                              }
                            ],
                            "id": 476,
                            "name": "MemberAccess",
                            "src": "4005:35:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 440,
                              "type": "address",
                              "value": "token_in"
                            },
                            "id": 477,
                            "name": "Identifier",
                            "src": "4068:8:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 442,
                              "type": "address",
                              "value": "token_out"
                            },
                            "id": 478,
                            "name": "Identifier",
                            "src": "4104:9:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 371,
                              "type": "uint24",
                              "value": "poolFee"
                            },
                            "id": 479,
                            "name": "Identifier",
                            "src": "4136:7:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967281,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 480,
                                "name": "Identifier",
                                "src": "4172:3:4"
                              }
                            ],
                            "id": 481,
                            "name": "MemberAccess",
                            "src": "4172:10:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "timestamp",
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 4294967292,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 482,
                                "name": "Identifier",
                                "src": "4210:5:4"
                              }
                            ],
                            "id": 483,
                            "name": "MemberAccess",
                            "src": "4210:15:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 436,
                              "type": "uint256",
                              "value": "amountOut"
                            },
                            "id": 484,
                            "name": "Identifier",
                            "src": "4254:9:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 438,
                              "type": "uint256",
                              "value": "amountInMaximum"
                            },
                            "id": 485,
                            "name": "Identifier",
                            "src": "4298:15:4"
                          },
                          {
                            "attributes": {
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 486,
                            "name": "Literal",
                            "src": "4350:1:4"
                          }
                        ],
                        "id": 487,
                        "name": "FunctionCall",
                        "src": "4005:361:4"
                      }
                    ],
                    "id": 488,
                    "name": "VariableDeclarationStatement",
                    "src": "3941:425:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 445,
                              "type": "uint256",
                              "value": "amountIn"
                            },
                            "id": 489,
                            "name": "Identifier",
                            "src": "4479:8:4"
                          },
                          {
                            "attributes": {
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_ExactOutputSingleParams_$159_memory_ptr",
                                      "typeString": "struct ISwapRouter.ExactOutputSingleParams memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "exactOutputSingle",
                                  "referencedDeclaration": 167,
                                  "type": "function (struct ISwapRouter.ExactOutputSingleParams memory) payable external returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 368,
                                      "type": "contract ISwapRouter",
                                      "value": "swapRouter"
                                    },
                                    "id": 490,
                                    "name": "Identifier",
                                    "src": "4490:10:4"
                                  }
                                ],
                                "id": 491,
                                "name": "MemberAccess",
                                "src": "4490:28:4"
                              },
                              {
                                "attributes": {
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 474,
                                  "type": "struct ISwapRouter.ExactOutputSingleParams memory",
                                  "value": "params"
                                },
                                "id": 492,
                                "name": "Identifier",
                                "src": "4519:6:4"
                              }
                            ],
                            "id": 493,
                            "name": "FunctionCall",
                            "src": "4490:36:4"
                          }
                        ],
                        "id": 494,
                        "name": "Assignment",
                        "src": "4479:47:4"
                      }
                    ],
                    "id": 495,
                    "name": "ExpressionStatement",
                    "src": "4479:47:4"
                  },
                  {
                    "attributes": {},
                    "children": [
                      {
                        "attributes": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "<",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 445,
                              "type": "uint256",
                              "value": "amountIn"
                            },
                            "id": 496,
                            "name": "Identifier",
                            "src": "4786:8:4"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 438,
                              "type": "uint256",
                              "value": "amountInMaximum"
                            },
                            "id": 497,
                            "name": "Identifier",
                            "src": "4797:15:4"
                          }
                        ],
                        "id": 498,
                        "name": "BinaryOperation",
                        "src": "4786:26:4"
                      },
                      {
                        "children": [
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "safeApprove",
                                      "referencedDeclaration": 331,
                                      "type": "function (address,address,uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 358,
                                          "type": "type(library TransferHelper)",
                                          "value": "TransferHelper"
                                        },
                                        "id": 499,
                                        "name": "Identifier",
                                        "src": "4828:14:4"
                                      }
                                    ],
                                    "id": 501,
                                    "name": "MemberAccess",
                                    "src": "4828:26:4"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 440,
                                      "type": "address",
                                      "value": "token_in"
                                    },
                                    "id": 502,
                                    "name": "Identifier",
                                    "src": "4855:8:4"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "isStructConstructorCall": false,
                                      "lValueRequested": false,
                                      "names": [
                                        null
                                      ],
                                      "tryCall": false,
                                      "type": "address",
                                      "type_conversion": true
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_ISwapRouter_$187",
                                              "typeString": "contract ISwapRouter"
                                            }
                                          ],
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "type": "type(address)"
                                        },
                                        "children": [
                                          {
                                            "attributes": {
                                              "name": "address"
                                            },
                                            "id": 503,
                                            "name": "ElementaryTypeName",
                                            "src": "4865:7:4"
                                          }
                                        ],
                                        "id": 504,
                                        "name": "ElementaryTypeNameExpression",
                                        "src": "4865:7:4"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 368,
                                          "type": "contract ISwapRouter",
                                          "value": "swapRouter"
                                        },
                                        "id": 505,
                                        "name": "Identifier",
                                        "src": "4873:10:4"
                                      }
                                    ],
                                    "id": 506,
                                    "name": "FunctionCall",
                                    "src": "4865:19:4"
                                  },
                                  {
                                    "attributes": {
                                      "hexvalue": "30",
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "token": "number",
                                      "type": "int_const 0",
                                      "value": "0"
                                    },
                                    "id": 507,
                                    "name": "Literal",
                                    "src": "4886:1:4"
                                  }
                                ],
                                "id": 508,
                                "name": "FunctionCall",
                                "src": "4828:60:4"
                              }
                            ],
                            "id": 509,
                            "name": "ExpressionStatement",
                            "src": "4828:60:4"
                          },
                          {
                            "children": [
                              {
                                "attributes": {
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "tuple()",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "safeTransfer",
                                      "referencedDeclaration": 285,
                                      "type": "function (address,address,uint256)"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 358,
                                          "type": "type(library TransferHelper)",
                                          "value": "TransferHelper"
                                        },
                                        "id": 510,
                                        "name": "Identifier",
                                        "src": "4902:14:4"
                                      }
                                    ],
                                    "id": 512,
                                    "name": "MemberAccess",
                                    "src": "4902:27:4"
                                  },
                                  {
                                    "attributes": {
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 440,
                                      "type": "address",
                                      "value": "token_in"
                                    },
                                    "id": 513,
                                    "name": "Identifier",
                                    "src": "4930:8:4"
                                  },
                                  {
                                    "attributes": {
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "sender",
                                      "type": "address payable"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 4294967281,
                                          "type": "msg",
                                          "value": "msg"
                                        },
                                        "id": 514,
                                        "name": "Identifier",
                                        "src": "4940:3:4"
                                      }
                                    ],
                                    "id": 515,
                                    "name": "MemberAccess",
                                    "src": "4940:10:4"
                                  },
                                  {
                                    "attributes": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "operator": "-",
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 438,
                                          "type": "uint256",
                                          "value": "amountInMaximum"
                                        },
                                        "id": 516,
                                        "name": "Identifier",
                                        "src": "4952:15:4"
                                      },
                                      {
                                        "attributes": {
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 445,
                                          "type": "uint256",
                                          "value": "amountIn"
                                        },
                                        "id": 517,
                                        "name": "Identifier",
                                        "src": "4970:8:4"
                                      }
                                    ],
                                    "id": 518,
                                    "name": "BinaryOperation",
                                    "src": "4952:26:4"
                                  }
                                ],
                                "id": 519,
                                "name": "FunctionCall",
                                "src": "4902:77:4"
                              }
                            ],
                            "id": 520,
                            "name": "ExpressionStatement",
                            "src": "4902:77:4"
                          }
                        ],
                        "id": 521,
                        "name": "Block",
                        "src": "4814:176:4"
                      }
                    ],
                    "id": 522,
                    "name": "IfStatement",
                    "src": "4782:208:4"
                  }
                ],
                "id": 523,
                "name": "Block",
                "src": "3469:1527:4"
              }
            ],
            "id": 524,
            "name": "FunctionDefinition",
            "src": "3321:1675:4"
          }
        ],
        "id": 525,
        "name": "ContractDefinition",
        "src": "231:4767:4"
      }
    ],
    "id": 526,
    "name": "SourceUnit",
    "src": "45:4953:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-11-25T18:06:48.407Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "swapExactInputSingle(uint256,address,address)": {
        "details": "The calling address must approve this contract to spend at least `amountIn` worth of its DAI for this function to succeed.",
        "params": {
          "amountIn": "The exact amount of DAI that will be swapped for WETH9."
        },
        "returns": {
          "amountOut": "The amount of WETH9 received."
        }
      },
      "swapExactOutputSingle(uint256,uint256,address,address)": {
        "details": "The calling address must approve this contract to spend its DAI for this function to succeed. As the amount of input DAI is variable, the calling address will need to approve for a slightly higher amount, anticipating some variance.",
        "params": {
          "amountInMaximum": "The amount of DAI we are willing to spend to receive the specified amount of WETH9.",
          "amountOut": "The exact amount of WETH9 to receive from the swap."
        },
        "returns": {
          "amountIn": "The amount of DAI actually spent in the swap."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "swapExactInputSingle(uint256,address,address)": {
        "notice": "swapExactInputSingle swaps a fixed amount of DAI for a maximum possible amount of WETH9 using the DAI/WETH9 0.3% pool by calling `exactInputSingle` in the swap router."
      },
      "swapExactOutputSingle(uint256,uint256,address,address)": {
        "notice": "swapExactOutputSingle swaps a minimum possible amount of DAI for a fixed amount of WETH."
      }
    },
    "version": 1
  }
}